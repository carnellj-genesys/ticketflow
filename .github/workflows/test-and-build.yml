name: Test and Build

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci --ignore-scripts
      
      
    - name: Run tests
      run: npm run test:run
      
    - name: Run test coverage
      run: npm run test:coverage
      
  trigger-docker-build:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    
    steps:
    - name: Trigger Docker Build Workflow
      uses: actions/github-script@v7
      with:
        script: |
          await github.rest.actions.createWorkflowDispatch({
            owner: context.repo.owner,
            repo: context.repo.repo,
            workflow_id: 'docker-build.yml',
            ref: context.ref
          });
          
    - name: Wait for Docker Build to Complete
      uses: actions/github-script@v7
      with:
        script: |
          // Wait for the docker-build workflow to complete
          const maxWaitTime = 30 * 60 * 1000; // 30 minutes
          const startTime = Date.now();
          
          while (Date.now() - startTime < maxWaitTime) {
            const workflows = await github.rest.actions.listWorkflowRuns({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'docker-build.yml',
              branch: context.ref.replace('refs/heads/', ''),
              per_page: 1
            });
            
            if (workflows.data.workflow_runs.length > 0) {
              const latestRun = workflows.data.workflow_runs[0];
              if (latestRun.status === 'completed') {
                console.log(`Docker build workflow completed with status: ${latestRun.conclusion}`);
                if (latestRun.conclusion === 'success') {
                  console.log('Docker build successful, Packer workflow will be triggered automatically');
                  // Add a small delay to ensure the workflow_run event is properly registered
                  await new Promise(resolve => setTimeout(resolve, 10000)); // Wait 10 seconds
                }
                break;
              }
            }
            
            console.log('Waiting for docker-build workflow to complete...');
            await new Promise(resolve => setTimeout(resolve, 30000)); // Wait 30 seconds
          } 